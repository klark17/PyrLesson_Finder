import sqlalchemy as sa
# from paginate_sqlalchemy import SqlalchemyOrmPage #<- provides pagination
from ..models.db_models import Participant
from ..form import levels
from sqlalchemy import or_


# use this to get search results instead
class DependentService(object):

    @classmethod
    def get_by_id(cls, request):
        dep_id = int(request.matchdict['dep_id'])
        dependent = request.dbsession.query(Participant).get(dep_id)
        return dependent


    @classmethod
    def get_paginator(cls, request, page=1):
        query = request.dbsession.query(Participant)
        query = query.order_by(sa.desc(Participant.created))
        query_params = request.GET.mixed()

        def url_maker(link_page):
            # replace page param with values generated by paginator
            query_params['page'] = link_page
            return request.current_route_url(_query=query_params)

        # return SqlalchemyOrmPage(query, page, items_per_page=5,
        #                          url_maker=url_maker)